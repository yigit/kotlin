RAW_FIR:
FILE: classMembers.kt
    public? final? [RAW_FIR] class A : R|kotlin/Any| {
        public? [RAW_FIR] [ContainingClassKey=A] constructor(): R|A| {
            super<R|kotlin/Any|>()
        }

        public? final? [RAW_FIR] fun resolveMe(): R|kotlin/Unit| {
            receive#(functionWithLazyBody#())
        }

        public? final? [RAW_FIR] val x: Int = IntegerLiteral(10)
            [RAW_FIR] [ContainingClassKey=A] public? get(): Int {
                ^ field#
            }

        public? final? [RAW_FIR] fun receive([RAW_FIR] value: String): R|kotlin/Unit| {
        }

        public? final? [RAW_FIR] fun functionWithLazyBody(): String {
            ^functionWithLazyBody String(42)
        }

    }

IMPORTS:
FILE: classMembers.kt
    public? final? [RAW_FIR] class A : R|kotlin/Any| {
        public? [RAW_FIR] [ContainingClassKey=A] constructor(): R|A| {
            super<R|kotlin/Any|>()
        }

        public? final? [RAW_FIR] fun resolveMe(): R|kotlin/Unit| {
            receive#(functionWithLazyBody#())
        }

        public? final? [RAW_FIR] val x: Int = IntegerLiteral(10)
            [RAW_FIR] [ContainingClassKey=A] public? get(): Int {
                ^ field#
            }

        public? final? [RAW_FIR] fun receive([RAW_FIR] value: String): R|kotlin/Unit| {
        }

        public? final? [RAW_FIR] fun functionWithLazyBody(): String {
            ^functionWithLazyBody String(42)
        }

    }

SUPER_TYPES:
FILE: classMembers.kt
    public? final? [RAW_FIR] class A : R|kotlin/Any| {
        public? [RAW_FIR] [ContainingClassKey=A] constructor(): R|A| {
            super<R|kotlin/Any|>()
        }

        public? final? [SUPER_TYPES] fun resolveMe(): R|kotlin/Unit| {
            receive#(functionWithLazyBody#())
        }

        public? final? [RAW_FIR] val x: Int = IntegerLiteral(10)
            [RAW_FIR] [ContainingClassKey=A] public? get(): Int {
                ^ field#
            }

        public? final? [RAW_FIR] fun receive([RAW_FIR] value: String): R|kotlin/Unit| {
        }

        public? final? [RAW_FIR] fun functionWithLazyBody(): String {
            ^functionWithLazyBody String(42)
        }

    }

TYPES:
FILE: classMembers.kt
    public? final? [SUPER_TYPES] class A : R|kotlin/Any| {
        public? [SUPER_TYPES] [ContainingClassKey=A] constructor(): R|A| {
            super<R|kotlin/Any|>()
        }

        public? final? [TYPES] fun resolveMe(): R|kotlin/Unit| {
            receive#(functionWithLazyBody#())
        }

        public? final? [SUPER_TYPES] val x: Int = IntegerLiteral(10)
            [SUPER_TYPES] [ContainingClassKey=A] public? get(): Int {
                ^ field#
            }

        public? final? [SUPER_TYPES] fun receive([RAW_FIR] value: String): R|kotlin/Unit| {
        }

        public? final? [SUPER_TYPES] fun functionWithLazyBody(): String {
            ^functionWithLazyBody String(42)
        }

    }

ARGUMENTS_OF_ANNOTATIONS:
FILE: classMembers.kt
    public? final? [SUPER_TYPES] class A : R|kotlin/Any| {
        public? [SUPER_TYPES] [ContainingClassKey=A] constructor(): R|A| {
            super<R|kotlin/Any|>()
        }

        public? final? [ARGUMENTS_OF_ANNOTATIONS] fun resolveMe(): R|kotlin/Unit| {
            receive#(functionWithLazyBody#())
        }

        public? final? [SUPER_TYPES] val x: Int = IntegerLiteral(10)
            [SUPER_TYPES] [ContainingClassKey=A] public? get(): Int {
                ^ field#
            }

        public? final? [SUPER_TYPES] fun receive([RAW_FIR] value: String): R|kotlin/Unit| {
        }

        public? final? [SUPER_TYPES] fun functionWithLazyBody(): String {
            ^functionWithLazyBody String(42)
        }

    }

STATUS:
FILE: classMembers.kt
    public final [SUPER_TYPES] class A : R|kotlin/Any| {
        public? [SUPER_TYPES] [ContainingClassKey=A] constructor(): R|A| {
            super<R|kotlin/Any|>()
        }

        public final [STATUS] fun resolveMe(): R|kotlin/Unit| {
            receive#(functionWithLazyBody#())
        }

        public? final? [SUPER_TYPES] val x: Int = IntegerLiteral(10)
            [SUPER_TYPES] [ContainingClassKey=A] public? get(): Int {
                ^ field#
            }

        public? final? [SUPER_TYPES] fun receive([RAW_FIR] value: String): R|kotlin/Unit| {
        }

        public? final? [SUPER_TYPES] fun functionWithLazyBody(): String {
            ^functionWithLazyBody String(42)
        }

    }

CONTRACTS:
FILE: classMembers.kt
    public final [SUPER_TYPES] class A : R|kotlin/Any| {
        public? [SUPER_TYPES] [ContainingClassKey=A] constructor(): R|A| {
            super<R|kotlin/Any|>()
        }

        public final [CONTRACTS] fun resolveMe(): R|kotlin/Unit| {
            receive#(functionWithLazyBody#())
        }

        public? final? [SUPER_TYPES] val x: Int = IntegerLiteral(10)
            [SUPER_TYPES] [ContainingClassKey=A] public? get(): Int {
                ^ field#
            }

        public? final? [SUPER_TYPES] fun receive([RAW_FIR] value: String): R|kotlin/Unit| {
        }

        public? final? [SUPER_TYPES] fun functionWithLazyBody(): String {
            ^functionWithLazyBody String(42)
        }

    }

IMPLICIT_TYPES_BODY_RESOLVE:
FILE: classMembers.kt
    public final [STATUS] class A : R|kotlin/Any| {
        public [STATUS] [ContainingClassKey=A] constructor(): R|A| {
            super<R|kotlin/Any|>()
        }

        public final [IMPLICIT_TYPES_BODY_RESOLVE] fun resolveMe(): R|kotlin/Unit| {
            receive#(functionWithLazyBody#())
        }

        public final [STATUS] val x: R|kotlin/Int| = IntegerLiteral(10)
            [STATUS] [ContainingClassKey=A] public get(): R|kotlin/Int| {
                ^ field#
            }

        public final [STATUS] fun receive([RAW_FIR] value: R|kotlin/String|): R|kotlin/Unit| {
        }

        public final [STATUS] fun functionWithLazyBody(): R|kotlin/String| {
            ^functionWithLazyBody String(42)
        }

    }

BODY_RESOLVE:
FILE: classMembers.kt
    public final [STATUS] class A : R|kotlin/Any| {
        public [STATUS] [ContainingClassKey=A] constructor(): R|A| {
            super<R|kotlin/Any|>()
        }

        public final [BODY_RESOLVE] fun resolveMe(): R|kotlin/Unit| {
            this@R|/A|.R|/A.receive|(this@R|/A|.R|/A.functionWithLazyBody|())
        }

        public final [STATUS] val x: R|kotlin/Int| = IntegerLiteral(10)
            [STATUS] [ContainingClassKey=A] public get(): R|kotlin/Int| {
                ^ field#
            }

        public final [STATUS] fun receive([RAW_FIR] value: R|kotlin/String|): R|kotlin/Unit| {
        }

        public final [STATUS] fun functionWithLazyBody(): R|kotlin/String| {
            ^functionWithLazyBody String(42)
        }

    }

NoResolve:
FILE: classMembers.kt
    public? final? [RAW_FIR] class A : R|kotlin/Any| {
        public? [RAW_FIR] [ContainingClassKey=A] constructor(): R|A| {
            super<R|kotlin/Any|>()
        }

        public? final? [RAW_FIR] fun resolveMe(): R|kotlin/Unit| {
            receive#(functionWithLazyBody#())
        }

        public? final? [RAW_FIR] val x: Int = IntegerLiteral(10)
            [RAW_FIR] [ContainingClassKey=A] public? get(): Int {
                ^ field#
            }

        public? final? [RAW_FIR] fun receive([RAW_FIR] value: String): R|kotlin/Unit| {
        }

        public? final? [RAW_FIR] fun functionWithLazyBody(): String {
            ^functionWithLazyBody String(42)
        }

    }

BodyResolveWithChildren:
FILE: classMembers.kt
    public final [STATUS] class A : R|kotlin/Any| {
        public [STATUS] [ContainingClassKey=A] constructor(): R|A| {
            super<R|kotlin/Any|>()
        }

        public final [BODY_RESOLVE] fun resolveMe(): R|kotlin/Unit| {
            this@R|/A|.R|/A.receive|(this@R|/A|.R|/A.functionWithLazyBody|())
        }

        public final [STATUS] val x: R|kotlin/Int| = IntegerLiteral(10)
            [STATUS] [ContainingClassKey=A] public get(): R|kotlin/Int| {
                ^ field#
            }

        public final [STATUS] fun receive([RAW_FIR] value: R|kotlin/String|): R|kotlin/Unit| {
        }

        public final [STATUS] fun functionWithLazyBody(): R|kotlin/String| {
            ^functionWithLazyBody String(42)
        }

    }

CallableBodyResolve:
FILE: classMembers.kt
    public final [STATUS] class A : R|kotlin/Any| {
        public [STATUS] [ContainingClassKey=A] constructor(): R|A| {
            super<R|kotlin/Any|>()
        }

        public final [BODY_RESOLVE] fun resolveMe(): R|kotlin/Unit| {
            this@R|/A|.R|/A.receive|(this@R|/A|.R|/A.functionWithLazyBody|())
        }

        public final [STATUS] val x: R|kotlin/Int| = IntegerLiteral(10)
            [STATUS] [ContainingClassKey=A] public get(): R|kotlin/Int| {
                ^ field#
            }

        public final [STATUS] fun receive([RAW_FIR] value: R|kotlin/String|): R|kotlin/Unit| {
        }

        public final [STATUS] fun functionWithLazyBody(): R|kotlin/String| {
            ^functionWithLazyBody String(42)
        }

    }

CallableReturnType:
FILE: classMembers.kt
    public? final? [RAW_FIR] class A : R|kotlin/Any| {
        public? [RAW_FIR] [ContainingClassKey=A] constructor(): R|A| {
            super<R|kotlin/Any|>()
        }

        public? final? [RAW_FIR] fun resolveMe(): R|kotlin/Unit| {
            receive#(functionWithLazyBody#())
        }

        public? final? [RAW_FIR] val x: Int = IntegerLiteral(10)
            [RAW_FIR] [ContainingClassKey=A] public? get(): Int {
                ^ field#
            }

        public? final? [RAW_FIR] fun receive([RAW_FIR] value: String): R|kotlin/Unit| {
        }

        public? final? [RAW_FIR] fun functionWithLazyBody(): String {
            ^functionWithLazyBody String(42)
        }

    }

AnnotationType:
FILE: classMembers.kt
    public? final? [SUPER_TYPES] class A : R|kotlin/Any| {
        public? [SUPER_TYPES] [ContainingClassKey=A] constructor(): R|A| {
            super<R|kotlin/Any|>()
        }

        public? final? [TYPES] fun resolveMe(): R|kotlin/Unit| {
            receive#(functionWithLazyBody#())
        }

        public? final? [SUPER_TYPES] val x: Int = IntegerLiteral(10)
            [SUPER_TYPES] [ContainingClassKey=A] public? get(): Int {
                ^ field#
            }

        public? final? [SUPER_TYPES] fun receive([RAW_FIR] value: String): R|kotlin/Unit| {
        }

        public? final? [SUPER_TYPES] fun functionWithLazyBody(): String {
            ^functionWithLazyBody String(42)
        }

    }

AnnotationsArguments:
FILE: classMembers.kt
    public? final? [SUPER_TYPES] class A : R|kotlin/Any| {
        public? [SUPER_TYPES] [ContainingClassKey=A] constructor(): R|A| {
            super<R|kotlin/Any|>()
        }

        public? final? [ARGUMENTS_OF_ANNOTATIONS] fun resolveMe(): R|kotlin/Unit| {
            receive#(functionWithLazyBody#())
        }

        public? final? [SUPER_TYPES] val x: Int = IntegerLiteral(10)
            [SUPER_TYPES] [ContainingClassKey=A] public? get(): Int {
                ^ field#
            }

        public? final? [SUPER_TYPES] fun receive([RAW_FIR] value: String): R|kotlin/Unit| {
        }

        public? final? [SUPER_TYPES] fun functionWithLazyBody(): String {
            ^functionWithLazyBody String(42)
        }

    }

CallableContracts:
FILE: classMembers.kt
    public final [SUPER_TYPES] class A : R|kotlin/Any| {
        public? [SUPER_TYPES] [ContainingClassKey=A] constructor(): R|A| {
            super<R|kotlin/Any|>()
        }

        public final [CONTRACTS] fun resolveMe(): R|kotlin/Unit| {
            receive#(functionWithLazyBody#())
        }

        public? final? [SUPER_TYPES] val x: Int = IntegerLiteral(10)
            [SUPER_TYPES] [ContainingClassKey=A] public? get(): Int {
                ^ field#
            }

        public? final? [SUPER_TYPES] fun receive([RAW_FIR] value: String): R|kotlin/Unit| {
        }

        public? final? [SUPER_TYPES] fun functionWithLazyBody(): String {
            ^functionWithLazyBody String(42)
        }

    }

DeclarationStatus:
FILE: classMembers.kt
    public final [SUPER_TYPES] class A : R|kotlin/Any| {
        public? [SUPER_TYPES] [ContainingClassKey=A] constructor(): R|A| {
            super<R|kotlin/Any|>()
        }

        public final [STATUS] fun resolveMe(): R|kotlin/Unit| {
            receive#(functionWithLazyBody#())
        }

        public? final? [SUPER_TYPES] val x: Int = IntegerLiteral(10)
            [SUPER_TYPES] [ContainingClassKey=A] public? get(): Int {
                ^ field#
            }

        public? final? [SUPER_TYPES] fun receive([RAW_FIR] value: String): R|kotlin/Unit| {
        }

        public? final? [SUPER_TYPES] fun functionWithLazyBody(): String {
            ^functionWithLazyBody String(42)
        }

    }

ValueParametersTypes:
FILE: classMembers.kt
    public? final? [SUPER_TYPES] class A : R|kotlin/Any| {
        public? [SUPER_TYPES] [ContainingClassKey=A] constructor(): R|A| {
            super<R|kotlin/Any|>()
        }

        public? final? [TYPES] fun resolveMe(): R|kotlin/Unit| {
            receive#(functionWithLazyBody#())
        }

        public? final? [SUPER_TYPES] val x: Int = IntegerLiteral(10)
            [SUPER_TYPES] [ContainingClassKey=A] public? get(): Int {
                ^ field#
            }

        public? final? [SUPER_TYPES] fun receive([RAW_FIR] value: String): R|kotlin/Unit| {
        }

        public? final? [SUPER_TYPES] fun functionWithLazyBody(): String {
            ^functionWithLazyBody String(42)
        }

    }

TypeParametersTypes:
FILE: classMembers.kt
    public? final? [SUPER_TYPES] class A : R|kotlin/Any| {
        public? [SUPER_TYPES] [ContainingClassKey=A] constructor(): R|A| {
            super<R|kotlin/Any|>()
        }

        public? final? [TYPES] fun resolveMe(): R|kotlin/Unit| {
            receive#(functionWithLazyBody#())
        }

        public? final? [SUPER_TYPES] val x: Int = IntegerLiteral(10)
            [SUPER_TYPES] [ContainingClassKey=A] public? get(): Int {
                ^ field#
            }

        public? final? [SUPER_TYPES] fun receive([RAW_FIR] value: String): R|kotlin/Unit| {
        }

        public? final? [SUPER_TYPES] fun functionWithLazyBody(): String {
            ^functionWithLazyBody String(42)
        }

    }

FILE RAW TO BODY:
FILE: classMembers.kt
    public final [BODY_RESOLVE] class A : R|kotlin/Any| {
        public [BODY_RESOLVE] [ContainingClassKey=A] constructor(): R|A| {
            super<R|kotlin/Any|>()
        }

        public final [BODY_RESOLVE] fun resolveMe(): R|kotlin/Unit| {
            this@R|/A|.R|/A.receive|(this@R|/A|.R|/A.functionWithLazyBody|())
        }

        public final [BODY_RESOLVE] [IsReferredViaField=true] val x: R|kotlin/Int| = Int(10)
            [BODY_RESOLVE] [ContainingClassKey=A] public get(): R|kotlin/Int| {
                ^ this@R|/A|.F|/A.x|
            }

        public final [BODY_RESOLVE] fun receive([BODY_RESOLVE] value: R|kotlin/String|): R|kotlin/Unit| {
        }

        public final [BODY_RESOLVE] fun functionWithLazyBody(): R|kotlin/String| {
            ^functionWithLazyBody String(42)
        }

    }
